block('root').replace()(function() {
    var data = this.data = this.ctx.data;
    var rootUrl = this.data.page.site;

    this.data.siteMod = rootUrl === '/' ? 'index' : rootUrl.split('/')[1];

    // title generation (begin)
    var titles = data.pages.filter(function(item) {
        if (!new RegExp('^' + item.url).test(data.page.site)) return;

        return item.url.split('/').length <= data.page.site.split('/').length;
    }).map(function(item, idx) { return item.title }, this);

    if (data.page.url !== data.page.site)
        titles.push(data.page.title);

    titles.reverse();

    var title = titles.shift();
    titles.forEach(function(t) { title += ' / ' + t });
    // title generation (end)

    var libs = {};
    data.pages.forEach(function (page) {
        if (page.type === 'lib') {
            var split = page.site.replace(/(.*)\/$/, '$1').split('/'),
                version = split.pop();
                name = split.pop();

            if (!libs[name])
                libs[name] = [];

            if (libs[name].indexOf(version) == -1)
                libs[name].push(version);
        }
    });

    this.data.libs = libs;

    return {
        block: 'page',
        title: title,
        head: [
            { elem: 'css', url: '//fonts.googleapis.com/css?family=Open+Sans:300&subset=cyrillic' },
            { elem: 'css', url: '/index.min.css' }
        ],
        scripts: [
            { elem: 'js', url: '/index.min.js' }
        ]
    };
});
